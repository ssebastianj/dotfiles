#### =========================== Functions ===================================

# Assume "bash" shell by default
guessed_shell="bash"

guess_shell(){
    if [ -n "`$SHELL -c 'echo $ZSH_VERSION'`" ]; then
        # Assume shell is zsh
        guessed_shell="zsh"
    elif [ -n "`$SHELL -c 'echo $BASH_VERSION'`" ]; then
        # Assume shell is bash
        guessed_shell="bash"
    elif [ -n "`$SHELL -c 'echo $FISH_VERSION'`" ]; then
        # Assume shell is fish
        guessed_shell="fish"
    fi
}
# Try to guess shell
guess_shell

is_bash_shell(){
    [[ "$guessed_shell" == "bash" ]]
}

is_zsh_shell(){
    [[ "$guessed_shell" == "zsh" ]]
}

is_fish_shell(){
    [[ "$guessed_shell" == "fish" ]]
}


#### ============================ ssebastianj ================================

#### Aliases -----------------------------------------------------------------
source $HOME/.aliases

#### Root dir for development purposes ---------------------------------------
export DEVDIR="$HOME/development"

#### rbenv -------------------------------------------------------------------
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

#### tmuxinator --------------------------------------------------------------
export EDITOR="vim"

if is_zsh_shell; then
    source $HOME/.bin/tmuxinator.zsh
else
    source $HOME/.bin/tmuxinator.sh
fi

#### Node Version Manager ----------------------------------------------------
export NVM_DIR="$HOME/.nvm"

# FIXME: Startup delay
# https://github.com/creationix/nvm/issues/860
# https://github.com/creationix/nvm/issues/703
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"  # This loads nvm

#### Added by the Heroku Toolbelt --------------------------------------------
export PATH="/usr/local/heroku/bin:$PATH"
[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

#### Python pip user binaries ------------------------------------------------
export PATH="$HOME/.local/bin:$PATH"

#### Virtualenvwrapper -------------------------------------------------------
export WORKON_HOME="$DEVDIR/.virtualenvs"
export PROJECT_HOME=$DEVDIR
export VIRTUALENVWRAPPER_PYTHON=`which python`
# source `which virtualenvwrapper.sh`

#### -------------------------------------------------------------------------
#### Taken from "https://marklodato.github.io/2013/10/25/github-two-factor-and-gnome-keyring.html"
#### Tell D-Bus to use the instance that was started on the machine'so
#### graphical login, and this in turn allows git-credential-gnome-keyring
#### to talk to the main gnome-keyring-daemon instance.
if [[ -z $DBUS_SESSION_BUS_ADDRESS ]]; then
    if [[ -f $HOME/.dbus/session-bus/$(dbus-uuidgen --get)-0 ]]; then
        source $HOME/.dbus/session-bus/$(dbus-uuidgen --get)-0
        export DBUS_SESSION_BUS_ADDRESS
    fi
fi

#### Golang ------------------------------------------------------------------
export GOPATH="$DEVDIR/gocode"
export PATH="$PATH:$GOPATH/bin"

#### Git ---------------------------------------------------------------------
export PATH="$HOME/.git-contrib:$PATH"

#### Rust --------------------------------------------------------------------
export RUST_SRC_PATH="$DEVDIR/rust/src"
export CARGO_HOME="$HOME/.cargo"

#### Docker Machine ----------------------------------------------------------
#PS1="$PS1$(__docker_machine_ps1)"

#### Django ------------------------------------------------------------------
if is_zsh_shell; then
    autoload -U bashcompinit && bashcompinit
fi

source $HOME/development/django/extras/django_bash_completion
